{
  "stats": {
    "suites": 27,
    "tests": 187,
    "passes": 182,
    "pending": 0,
    "failures": 5,
    "start": "2020-08-04T22:59:01.581Z",
    "end": "2020-08-04T22:59:01.581Z",
    "duration": 108818,
    "testsRegistered": 187,
    "passPercent": 97.32620320855615,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94dd4310-346d-4da1-a6a5-94ec52e792a0",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Assertions/bddChaiAssertion.js",
      "file": "cypress/integration/Autolearning/Assertions/bddChaiAssertion.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aafd6b11-b69d-48d3-8ec6-bbf8244140c1",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
              "title": "Validate with BDD Chai assertion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validating SEARCH FLIGHTS button text - Using to.equal and not.equal",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating SEARCH FLIGHTS button text - Using to.equal and not.equal",
                  "timedOut": null,
                  "duration": 2496,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/*\nexpect(function () {}).to.not.throw();\nexpect({a: 1}).to.not.have.property('b');\nexpect([1, 2]).to.be.an('array').that.does.not.include(3);\n */\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText).to.equal('SEARCH FLIGHTS');\n});\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText).to.not.equal('SEARCH CITY');\n});",
                  "err": {},
                  "uuid": "5e752447-0ac4-4e2d-bfda-0f3cfd11c1f5",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating two search calendar objects inner text are same - using deep eql",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating two search calendar objects inner text are same - using deep eql",
                  "timedOut": null,
                  "duration": 211,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//  https://github.com/chaijs/deep-eql\n/*\n        cy.get('.search-calendar')\n        .eq(0)\n        .should(($SCal1) => {\n        expect($SCal1).to.deep.equal($SCal1)\n         \n*/\ncy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  cy.get('.search-calendar').eq(1).should(function (SCal_2) {\n    expect(SCal_2.innerText).to.deep.equal(SCal_1.innerText);\n    expect(SCal_2.width).to.deep.equal(SCal_1.width);\n  });\n});",
                  "err": {},
                  "uuid": "57dffa5c-44db-4aae-b742-d005fd997c42",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - using nested (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - using nested (NOT DONE)",
                  "timedOut": null,
                  "duration": 72,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('a#btn-search-flight').should(function (li) {// expect(li.btn.inline).to.have.nested.property('li.display', 'inline-block');\n  //  expect(li.property).to.have.nested.property('ATTRIBUTE_NODE','2');\n  /*\n  const c = cy.get('body.home');\n   cy.log(c);\n   */\n});",
                  "err": {},
                  "uuid": "0f4b658b-e50a-494e-bdae-0fba31284cd8",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - using Ordered (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - using Ordered (NOT DONE)",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "4680d623-ecb2-4bda-9052-3115203f9830",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating - using any (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating - using any (NOT DONE)",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "1c827763-50eb-492b-b20e-a130de35519f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - using all (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - using all (NOT DONE)",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "43047941-79be-4121-ae04-caf7f8cbd3dd",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using a (type) (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using a (type) (NOT DONE)",
                  "timedOut": null,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c3c8a1ea-05b9-4c99-9bce-a43162017286",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using include (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using include (NOT DONE)",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "759765c6-5c2d-4992-af20-5d827e419734",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating undefined calendar - Using ok ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating undefined calendar - Using ok ",
                  "timedOut": null,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1.innerText).to.not.be.ok;\n  /*\n  Udefined can not be True or ok\n  expect(SCal_1.innerText).to.be.ok\n  */\n});",
                  "err": {},
                  "uuid": "5ef1e505-a8b3-4ec6-ae54-a497483b4c0f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using true ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using true ",
                  "timedOut": null,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1.innerText).to.not.be[\"true\"]; // means return false\n});",
                  "err": {},
                  "uuid": "5194abe4-0d7a-49c9-b815-16778afd359a",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using false ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using false ",
                  "timedOut": null,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1.innerText).to.not.be[\"false\"]; // means return true \n});",
                  "err": {},
                  "uuid": "89ccd4e7-c931-4dac-8265-cea80d24a16f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using null ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using null ",
                  "timedOut": null,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1.innerText).to.not.be[\"null\"]; // means return no null \n  /*\n          expect(SCal_1.innerText).to.be.null  //  Return null\n       */\n});",
                  "err": {},
                  "uuid": "05085112-dffe-4e54-94db-152787c8e7f0",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using undefined ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using undefined ",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1.innerText).to.be.undefined; // return undefined\n});",
                  "err": {},
                  "uuid": "24c5642d-76d8-4563-a96b-02656dc829dd",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using  exit",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using  exit",
                  "timedOut": null,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1).to.exist;\n});",
                  "err": {},
                  "uuid": "ad48e857-504e-4942-8ee5-169d1bcf328c",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using empty ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using empty ",
                  "timedOut": null,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  expect(SCal_1).to.be.empty; // expect(SCal_1).to.not.be.empty   // for not empty\n});",
                  "err": {},
                  "uuid": "8ddadc09-9812-4e9a-a992-b6ffa895807d",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using arguments (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using arguments (NOT DONE) ",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "764e3296-282e-4748-a880-388e25ab2336",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating all the deals on home page - Using equal ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating all the deals on home page - Using equal ",
                  "timedOut": null,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(42).to.equal(42)\ncy.get('.search-calendar').eq(0).then(function (SCal_1) {\n  cy.get('.search-calendar').eq(1).should(function (SCal_2) {\n    expect(SCal_2.innerText).to.equal(SCal_1.innerText);\n    expect(SCal_2.width).to.equal(SCal_1.width);\n  });\n});",
                  "err": {},
                  "uuid": "19390ccc-fd69-4166-b810-528cb44db72f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating length of SEARCH FLIGHT button text should be greater than 13 - Using greaterThan (Value) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating length of SEARCH FLIGHT button text should be greater than 13 - Using greaterThan (Value) ",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(10).to.be.greaterThan(5)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.greaterThan(13);\n});",
                  "err": {},
                  "uuid": "d446a9fd-1a78-44f7-bb2c-9c8e8ce4accc",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating length of SEARCH FLIGHT button text should be less than 15 - Using lessThan(value) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating length of SEARCH FLIGHT button text should be less than 15 - Using lessThan(value) ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect(5).to.be.lessThan(10)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.lessThan(15);\n});",
                  "err": {},
                  "uuid": "6cb805af-7ff9-4e9e-9aa7-775bdbdf1a21",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating length of SEARCH FLIGHT button text should be at least 14 - Using least ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating length of SEARCH FLIGHT button text should be at least 14 - Using least ",
                  "timedOut": null,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect(10).to.be.at.least(10)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.at.least(14);\n});",
                  "err": {},
                  "uuid": "322460e8-2daf-4b77-9342-11918edaf9e1",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating text number of SEARCH FLIGHT button should be at most 14 - Using most ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating text number of SEARCH FLIGHT button should be at most 14 - Using most ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect('test').to.have.length.of.at.most(4)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText).to.have.length.of.at.most(14);\n});",
                  "err": {},
                  "uuid": "eaa74b91-e96e-48dd-a476-1f56a10aabb0",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating length of SEARCH FLIGHT button text should be within 13 and 15  - Using whithin (start, finish)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating length of SEARCH FLIGHT button text should be within 13 and 15  - Using whithin (start, finish)",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(7).to.be.within(5,10)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.within(13, 15);\n});",
                  "err": {},
                  "uuid": "ad04cb78-c789-47e2-a0c3-20c2e236f3e2",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating all the deals on home page - Using instanceOf(constructor) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating all the deals on home page - Using instanceOf(constructor) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect([1, 2, 3]).to.be.instanceOf(Array)",
                  "err": {},
                  "uuid": "679a27d1-34a0-4347-92b8-78c70a77135b",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using property(name, [value]) (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using property(name, [value]) (NOT DONE)",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect(obj).to.have.property('name')",
                  "err": {},
                  "uuid": "d5216135-7ae5-4076-b473-f2df95dd7be0",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating - Using deep.property(name, [value]) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating - Using deep.property(name, [value]) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(deepObj).to.have.deep.property('tests[1]', 'e2e')",
                  "err": {},
                  "uuid": "c9d795ca-c18b-4e46-bafb-f562c0b4b414",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating - Using ownProperty(name) (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating - Using ownProperty(name) (NOT DONE)",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect('test').to.have.ownProperty('length')",
                  "err": {},
                  "uuid": "1b00f97b-cc3e-4d4d-8ef9-9a8b3d0df75a",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using ownPropertyDescriptor(name) (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using ownPropertyDescriptor(name) (NOT DONE)",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect({a: 1}).to.have.ownPropertyDescriptor('a')",
                  "err": {},
                  "uuid": "9e4ba916-dcaf-4559-8e6c-83a82ee46fa1",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating length of SEARCH FLIGHT text - Using lengthOf(value) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating length of SEARCH FLIGHT text - Using lengthOf(value) ",
                  "timedOut": null,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expect('test').to.have.lengthOf(3)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText).to.have.lengthOf(14);\n});",
                  "err": {},
                  "uuid": "7d11c503-04b4-44ff-928f-5c8f0ad92857",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using match(RegExp) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using match(RegExp) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect('testing').to.match(/^test/)",
                  "err": {},
                  "uuid": "cbc568f4-0fa0-4d22-85c2-800576d7cae6",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating SEARCH FLIGHT buutton has string SEARCH - Using string(string) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating SEARCH FLIGHT buutton has string SEARCH - Using string(string) ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect('testing').to.have.string('test')\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText).to.have.string('SEARCH');\n});",
                  "err": {},
                  "uuid": "d9387d8e-614b-4713-8876-6cd9b1c679cc",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using key(key1, [key2], […]) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using key(key1, [key2], […]) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect({ pass: 1, fail: 2 }).to.have.key('pass')",
                  "err": {},
                  "uuid": "19651d83-8b0d-42b8-9422-deee249244fa",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using throw(constructor) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using throw(constructor) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(fn).to.throw(Error)",
                  "err": {},
                  "uuid": "e7a307e7-755e-412d-9a0d-64099dd1df04",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using  respondTo(method)(NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using  respondTo(method)(NOT DONE) ",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(obj).to.respondTo('getName')",
                  "err": {},
                  "uuid": "28f8a76f-53ed-410e-83b6-165a502782ae",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using itself (NOT DONE)",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using itself (NOT DONE)",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(Foo).itself.to.respondTo('bar')",
                  "err": {},
                  "uuid": "46e520cf-af8c-4103-98f9-61ded43e3985",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using satisfy(method) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using satisfy(method) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(1).to.satisfy((num) => { return num > 0 })",
                  "err": {},
                  "uuid": "8d883cb0-c253-4292-9e48-df92ec902675",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using closeTo(expected, delta) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using closeTo(expected, delta) ",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(1.5).to.be.closeTo(1, 0.5)\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.closeTo(14, 1);\n});",
                  "err": {},
                  "uuid": "5f4a390f-741a-432b-b21c-d339ee07e3c1",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using members(set) (NOT DONE) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using members(set) (NOT DONE) ",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect([1, 2, 3]).to.include.members([3, 2])",
                  "err": {},
                  "uuid": "069e39f4-3d10-4c68-8a2b-a559695defe9",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using oneOf(values) ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using oneOf(values) ",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(2).to.be.oneOf([1,2,3])\ncy.get('a#btn-search-flight').should(function ($li) {\n  expect($li.get(0).innerText.length).to.be.oneOf([12, 13, 14]);\n});",
                  "err": {},
                  "uuid": "4878be12-5cc6-4919-b183-e5a3e932911b",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using change(function) (NOT DONE)  ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using change(function) (NOT DONE)  ",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(fn).to.change(obj, 'val')",
                  "err": {},
                  "uuid": "8c0bbb29-3977-40a8-9f69-9d701617b66f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using increase(function) (NOT DONE)  ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using increase(function) (NOT DONE)  ",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// expect(fn).to.increase(obj, 'val')",
                  "err": {},
                  "uuid": "875723e9-1580-4157-8d9b-448ccb49597f",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using decrease(function) (NOT DONE)  ",
                  "fullTitle": "Actions Validate with BDD Chai assertion Validating  - Using decrease(function) (NOT DONE)  ",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//  expect(fn).to.decrease(obj, 'val')",
                  "err": {},
                  "uuid": "cd701809-0656-4523-9365-b4b7c9da76f5",
                  "parentUUID": "e4278aa9-aef6-4874-a69e-d5e22f96422f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e752447-0ac4-4e2d-bfda-0f3cfd11c1f5",
                "57dffa5c-44db-4aae-b742-d005fd997c42",
                "0f4b658b-e50a-494e-bdae-0fba31284cd8",
                "4680d623-ecb2-4bda-9052-3115203f9830",
                "1c827763-50eb-492b-b20e-a130de35519f",
                "43047941-79be-4121-ae04-caf7f8cbd3dd",
                "c3c8a1ea-05b9-4c99-9bce-a43162017286",
                "759765c6-5c2d-4992-af20-5d827e419734",
                "5ef1e505-a8b3-4ec6-ae54-a497483b4c0f",
                "5194abe4-0d7a-49c9-b815-16778afd359a",
                "89ccd4e7-c931-4dac-8265-cea80d24a16f",
                "05085112-dffe-4e54-94db-152787c8e7f0",
                "24c5642d-76d8-4563-a96b-02656dc829dd",
                "ad48e857-504e-4942-8ee5-169d1bcf328c",
                "8ddadc09-9812-4e9a-a992-b6ffa895807d",
                "764e3296-282e-4748-a880-388e25ab2336",
                "19390ccc-fd69-4166-b810-528cb44db72f",
                "d446a9fd-1a78-44f7-bb2c-9c8e8ce4accc",
                "6cb805af-7ff9-4e9e-9aa7-775bdbdf1a21",
                "322460e8-2daf-4b77-9342-11918edaf9e1",
                "eaa74b91-e96e-48dd-a476-1f56a10aabb0",
                "ad04cb78-c789-47e2-a0c3-20c2e236f3e2",
                "679a27d1-34a0-4347-92b8-78c70a77135b",
                "d5216135-7ae5-4076-b473-f2df95dd7be0",
                "c9d795ca-c18b-4e46-bafb-f562c0b4b414",
                "1b00f97b-cc3e-4d4d-8ef9-9a8b3d0df75a",
                "9e4ba916-dcaf-4559-8e6c-83a82ee46fa1",
                "7d11c503-04b4-44ff-928f-5c8f0ad92857",
                "cbc568f4-0fa0-4d22-85c2-800576d7cae6",
                "d9387d8e-614b-4713-8876-6cd9b1c679cc",
                "19651d83-8b0d-42b8-9422-deee249244fa",
                "e7a307e7-755e-412d-9a0d-64099dd1df04",
                "28f8a76f-53ed-410e-83b6-165a502782ae",
                "46e520cf-af8c-4103-98f9-61ded43e3985",
                "8d883cb0-c253-4292-9e48-df92ec902675",
                "5f4a390f-741a-432b-b21c-d339ee07e3c1",
                "069e39f4-3d10-4c68-8a2b-a559695defe9",
                "4878be12-5cc6-4919-b183-e5a3e932911b",
                "8c0bbb29-3977-40a8-9f69-9d701617b66f",
                "875723e9-1580-4157-8d9b-448ccb49597f",
                "cd701809-0656-4523-9365-b4b7c9da76f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3663,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "705a13da-2c98-46a2-9907-d073c80d6d35",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Assertions/commonAssertion.js",
      "file": "cypress/integration/Autolearning/Assertions/commonAssertion.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5723185d-df1d-4a02-9c05-774d62b1a811",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e478b214-7618-42e1-920f-60ab788c4933",
              "title": "Validate Deals with common assertion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validating always 10 deals shows up on home page - Using have.length",
                  "fullTitle": "Actions Validate Deals with common assertion Validating always 10 deals shows up on home page - Using have.length",
                  "timedOut": null,
                  "duration": 6354,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.hp-deals-table').should('have.length', 10);\ncy.get('.hp-deals-table').should('not.have.length', 5);",
                  "err": {
                    "message": "AssertionError: Timed out retrying: Not enough elements found. Found '7', expected '10'.",
                    "estack": "AssertionError: Timed out retrying: Not enough elements found. Found '7', expected '10'.\n    at Context.eval (https://www.flighthub.com/__cypress/tests?p=cypress/integration/Autolearning/Assertions/commonAssertion.js:11:33)",
                    "diff": "- 7\n+ 10\n"
                  },
                  "uuid": "a9981896-bd29-443c-8fb8-c462d8104ad1",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating same grouped class and id - Using have.id and have.class ",
                  "fullTitle": "Actions Validate Deals with common assertion Validating same grouped class and id - Using have.id and have.class ",
                  "timedOut": null,
                  "duration": 196,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/*\nfind li within main_search_fares_form class\n cy.get('.main_search_fares_form').find('li').eq(0).should('have.class', 'flight_type_button_v2 flight-type-round-trip active')\n*/\ncy.get('.search_form_wrapper').should('have.id', 'search_form_flights');\ncy.get('#search_form_flights').should('have.class', 'search_form_wrapper'); // cy.get('#search_form_flights').should('not.have.class', 'search_form_wrapper');",
                  "err": {},
                  "uuid": "b2c3f59e-edec-443c-9c3b-9ab32370b9bd",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Fetching Sign-up and Enter city text area value - Using invoke Value",
                  "fullTitle": "Actions Validate Deals with common assertion Fetching Sign-up and Enter city text area value - Using invoke Value",
                  "timedOut": null,
                  "duration": 1073,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/*\n have.value is not working\n cy.get('.newsletter-form-left').type('antara.chowdhury@gmail.com').should('have.value','antara.chowdhury@gmail.com')\n  */\ncy.get('.newsletter-form-left').click().type('antara.chowdhury@gmail.com');\ncy.wait(500);\ncy.get('input[name=\"email\"]').invoke('val').then(function (sometext) {\n  return cy.log(sometext);\n});\ncy.get('input[type=\"text\"]').invoke('val').then(function (sometext) {\n  return cy.log(sometext);\n});",
                  "err": {},
                  "uuid": "39e86681-d95a-4249-993d-d5638a22cc8b",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating the SEARCH FLIGHT buttons text content - Using contain",
                  "fullTitle": "Actions Validate Deals with common assertion Validating the SEARCH FLIGHT buttons text content - Using contain",
                  "timedOut": null,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('a#btn-search-flight').should('contain', 'SEARCH FLIGHTS'); // cy.get('a#btn-search-flight').should('not.contain', 'SEARCH FLIGHTS')",
                  "err": {},
                  "uuid": "73918829-3991-4be8-8e9c-92a2a1ca877c",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating SEARCH FLIGHT buttons is visible - Using Visibility",
                  "fullTitle": "Actions Validate Deals with common assertion Validating SEARCH FLIGHT buttons is visible - Using Visibility",
                  "timedOut": null,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('a#btn-search-flight').should('be.visible'); // cy.get('a#btn-search-flight').should('not.be.visible');",
                  "err": {},
                  "uuid": "6a7189c0-4e99-427d-a1d2-f33976e8d780",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating all the deals exists on home page - Using Existence",
                  "fullTitle": "Actions Validate Deals with common assertion Validating all the deals exists on home page - Using Existence",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('a#btn-search-flight').should('be.exist'); // cy.get('a#btn-search-flight').should('not.exist');",
                  "err": {},
                  "uuid": "8c4fe48f-3313-423a-9542-594e1a893e4b",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating Prefer Non-Stop check box is checked on home page - Using State",
                  "fullTitle": "Actions Validate Deals with common assertion Validating Prefer Non-Stop check box is checked on home page - Using State",
                  "timedOut": null,
                  "duration": 214,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.hp-additional-options').find('a').click();\ncy.get('input[name=\\'non_stop\\']').click().should('be.checked');",
                  "err": {},
                  "uuid": "a3f96781-607c-44a0-af19-5f5fa33a174f",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating backgrouud color css and color value for SEARCH BUTTON   - Using CSS",
                  "fullTitle": "Actions Validate Deals with common assertion Validating backgrouud color css and color value for SEARCH BUTTON   - Using CSS",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('a#btn-search-flight').should('have.css', 'background-color', 'rgb(255, 100, 50)');",
                  "err": {},
                  "uuid": "d5579f8f-25a0-4797-8528-d7dce69fcea8",
                  "parentUUID": "e478b214-7618-42e1-920f-60ab788c4933",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2c3f59e-edec-443c-9c3b-9ab32370b9bd",
                "39e86681-d95a-4249-993d-d5638a22cc8b",
                "73918829-3991-4be8-8e9c-92a2a1ca877c",
                "6a7189c0-4e99-427d-a1d2-f33976e8d780",
                "8c4fe48f-3313-423a-9542-594e1a893e4b",
                "a3f96781-607c-44a0-af19-5f5fa33a174f",
                "d5579f8f-25a0-4797-8528-d7dce69fcea8"
              ],
              "failures": [
                "a9981896-bd29-443c-8fb8-c462d8104ad1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 7945,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f7dcdb5-ed85-4b15-a7ec-c58fa2fa3a4f",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Assertions/tddAssertion.js",
      "file": "cypress/integration/Autolearning/Assertions/tddAssertion.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "64514d11-f94a-4b6b-b6fe-74ac37a26bfe",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
              "title": "Validate with all TDD assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validating   - USING .isOk(object/expression, [message])",
                  "fullTitle": "Actions Validate with all TDD assertions Validating   - USING .isOk(object/expression, [message])",
                  "timedOut": null,
                  "duration": 1913,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//    assert.isOk('Antara', 'everything is ok')\nassert.isOk(cy.get('a#btn-search-flight').contains('SEARCH FLIGHTS'), 'Should return TRUE, SEARCH FLIGHT button text is ok');",
                  "err": {},
                  "uuid": "f00cdeee-f793-4fa4-a494-5b094beb59eb",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - Using .isNotOk(object, [message]) ",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - Using .isNotOk(object, [message]) ",
                  "timedOut": null,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.isNotOk(false, 'It will pass'); //  assert.isNotOk(cy.get('a#btn-search-flight').contains(null), 'It should return false')",
                  "err": {},
                  "uuid": "5b89a9cb-1d09-4645-b59e-265f33a80a42",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - USING  .equal(actual, expected, [message])",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - USING  .equal(actual, expected, [message])",
                  "timedOut": null,
                  "duration": 507,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// assert.equal(3, 3, 'vals equal')\n// let t = cy.get('a#btn-search-flight').its('text')\n//let t = cy.get('a#btn-search-flight').invoke('text')\nvar t = cy.get('a#btn-search-flight').text();\nassert.equal(t, 'SEARCH FLIGHTS', 'Value matches');",
                  "err": {
                    "message": "TypeError: cy.get(...).text is not a function",
                    "estack": "TypeError: cy.get(...).text is not a function\n    at Context.eval (https://www.flighthub.com/__cypress/tests?p=cypress/integration/Autolearning/Assertions/tddAssertion.js:21:45)",
                    "diff": null
                  },
                  "uuid": "27d55542-28fd-4d89-9a77-df9170aae6f4",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - USING ",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - USING ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9a12dee5-fd8f-430a-9061-169aaa045ade",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - USING ",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - USING ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9aa07f4d-3ae6-4061-b84d-11fb47847d71",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - USING ",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - USING ",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "8b647459-825a-4c8e-ba6b-e057cc4dc3cf",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating  - USING ",
                  "fullTitle": "Actions Validate with all TDD assertions Validating  - USING ",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "6e56c632-b927-4686-a11d-7cfaf95d40a1",
                  "parentUUID": "9b94c8c1-ca63-4193-9266-fe00af2c158b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f00cdeee-f793-4fa4-a494-5b094beb59eb",
                "5b89a9cb-1d09-4645-b59e-265f33a80a42",
                "9a12dee5-fd8f-430a-9061-169aaa045ade",
                "9aa07f4d-3ae6-4061-b84d-11fb47847d71",
                "8b647459-825a-4c8e-ba6b-e057cc4dc3cf",
                "6e56c632-b927-4686-a11d-7cfaf95d40a1"
              ],
              "failures": [
                "27d55542-28fd-4d89-9a77-df9170aae6f4"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2667,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d80f311e-14ae-436d-8be0-2d47068903c6",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Assertions/validateDealsJQueryLoop.js",
      "file": "cypress/integration/Autolearning/Assertions/validateDealsJQueryLoop.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78c08ff1-ef4d-492d-b514-b5fba17075ba",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "69516763-db7e-43c7-b0ba-9c3ec9675329",
              "title": "Validating all the deals Using jQuery loop",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate the deals with JQuery Loop:Today's Flight Deals*",
                  "fullTitle": "Actions Validating all the deals Using jQuery loop Validate the deals with JQuery Loop:Today's Flight Deals*",
                  "timedOut": null,
                  "duration": 1859,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".deals__title:visible\").should('contain', deal);",
                  "err": {},
                  "uuid": "ba9dd76f-cf51-482b-8c58-7667946133ca",
                  "parentUUID": "69516763-db7e-43c7-b0ba-9c3ec9675329",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate the deals with JQuery Loop:Featured Offers*",
                  "fullTitle": "Actions Validating all the deals Using jQuery loop Validate the deals with JQuery Loop:Featured Offers*",
                  "timedOut": null,
                  "duration": 114,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".deals__title:visible\").should('contain', deal);",
                  "err": {},
                  "uuid": "2a6d1ebd-9bb8-4c6c-9de9-74f7e1569196",
                  "parentUUID": "69516763-db7e-43c7-b0ba-9c3ec9675329",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate the deals with JQuery Loop:Our Best Price*",
                  "fullTitle": "Actions Validating all the deals Using jQuery loop Validate the deals with JQuery Loop:Our Best Price*",
                  "timedOut": null,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".deals__title:visible\").should('contain', deal);",
                  "err": {},
                  "uuid": "ad43cf41-78c6-4243-ab62-8232eb923a27",
                  "parentUUID": "69516763-db7e-43c7-b0ba-9c3ec9675329",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate the deals with JQuery Loop:Top Hotel Deals*",
                  "fullTitle": "Actions Validating all the deals Using jQuery loop Validate the deals with JQuery Loop:Top Hotel Deals*",
                  "timedOut": null,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".deals__title:visible\").should('contain', deal);",
                  "err": {},
                  "uuid": "12a042f0-6477-48e2-9628-2b0023383d85",
                  "parentUUID": "69516763-db7e-43c7-b0ba-9c3ec9675329",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate the deals with JQuery Loop:Top Car Deals*",
                  "fullTitle": "Actions Validating all the deals Using jQuery loop Validate the deals with JQuery Loop:Top Car Deals*",
                  "timedOut": null,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".deals__title:visible\").should('contain', deal);",
                  "err": {},
                  "uuid": "2a3ca52f-179a-42e1-8366-d0a1c1f5f4d4",
                  "parentUUID": "69516763-db7e-43c7-b0ba-9c3ec9675329",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba9dd76f-cf51-482b-8c58-7667946133ca",
                "2a6d1ebd-9bb8-4c6c-9de9-74f7e1569196",
                "ad43cf41-78c6-4243-ab62-8232eb923a27",
                "12a042f0-6477-48e2-9628-2b0023383d85",
                "2a3ca52f-179a-42e1-8366-d0a1c1f5f4d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "370953c3-712c-4a42-829f-9777e7a3144c",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Home/customCommandUsage.js",
      "file": "cypress/integration/Autolearning/Home/customCommandUsage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "44ba54f4-80f9-431b-9c13-6aeec4525173",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "335176bc-592f-45a9-b6ec-2de253d7ee19",
              "title": "Validate login using custom command",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Login using custom command and passing raw argument data",
                  "fullTitle": "Actions Validate login using custom command Login using custom command and passing raw argument data",
                  "timedOut": null,
                  "duration": 6744,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.login('antara.jb@gmail.com', '12345678');",
                  "err": {},
                  "uuid": "1ffa1a3a-e9a3-47d9-9454-3cf8f8b71309",
                  "parentUUID": "335176bc-592f-45a9-b6ec-2de253d7ee19",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Login using custom command and read test data from json",
                  "fullTitle": "Actions Validate login using custom command Login using custom command and read test data from json",
                  "timedOut": null,
                  "duration": 5161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('FlightHub_user.json').then(function (user) {\n  var email = user.email;\n  var pass = user.password;\n  cy.login(email, pass);\n});",
                  "err": {},
                  "uuid": "e7185b0a-a691-4095-931a-7968a0b461dd",
                  "parentUUID": "335176bc-592f-45a9-b6ec-2de253d7ee19",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ffa1a3a-e9a3-47d9-9454-3cf8f8b71309",
                "e7185b0a-a691-4095-931a-7968a0b461dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11905,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "98de259a-eae1-43d6-ae0f-d0ac4510563a",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Home/homePageValidation.js",
      "file": "cypress/integration/Autolearning/Home/homePageValidation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "468a0515-b5cd-495c-b013-49521c950075",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a9aeb596-b242-4ace-8749-eb8fd64d8715",
              "title": "Validate login using custom command",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Search flight button text validation using page objects",
                  "fullTitle": "Actions Validate login using custom command Search flight button text validation using page objects",
                  "timedOut": null,
                  "duration": 2439,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var home = new _HomePage[\"default\"]();\nhome.searchFlightButton().should('contain', 'SEARCH FLIGHTS');",
                  "err": {
                    "message": "TypeError: home.searchFlightButton is not a function",
                    "estack": "TypeError: home.searchFlightButton is not a function\n    at Context.eval (https://www.flighthub.com/__cypress/tests?p=cypress/integration/Autolearning/Home/homePageValidation.js:16:12)",
                    "diff": null
                  },
                  "uuid": "9c9e4560-37a7-4ac1-92e3-cb56ace6fab0",
                  "parentUUID": "a9aeb596-b242-4ace-8749-eb8fd64d8715",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Search for a round tril flight using custom command and page objects",
                  "fullTitle": "Actions Validate login using custom command Search for a round tril flight using custom command and page objects",
                  "timedOut": null,
                  "duration": 663,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.SearchRoundTripflight();",
                  "err": {
                    "message": "ReferenceError: HomePage is not defined",
                    "estack": "ReferenceError: HomePage is not defined\n    at Context.eval (https://www.flighthub.com/__cypress/tests?p=cypress/support/index.js:42:20)",
                    "diff": null
                  },
                  "uuid": "1ccaef03-40ed-44f5-bcfd-5bb51c723179",
                  "parentUUID": "a9aeb596-b242-4ace-8749-eb8fd64d8715",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validating sign-up feature using page objects",
                  "fullTitle": "Actions Validate login using custom command Validating sign-up feature using page objects",
                  "timedOut": null,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "da3cde53-798b-469d-b1e6-d39746a4df6e",
                  "parentUUID": "a9aeb596-b242-4ace-8749-eb8fd64d8715",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Search for a city using page objects",
                  "fullTitle": "Actions Validate login using custom command Search for a city using page objects",
                  "timedOut": null,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "12428868-6f52-43a2-a7a1-c8c60ab35da6",
                  "parentUUID": "a9aeb596-b242-4ace-8749-eb8fd64d8715",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da3cde53-798b-469d-b1e6-d39746a4df6e",
                "12428868-6f52-43a2-a7a1-c8c60ab35da6"
              ],
              "failures": [
                "9c9e4560-37a7-4ac1-92e3-cb56ace6fab0",
                "1ccaef03-40ed-44f5-bcfd-5bb51c723179"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3182,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2bc4e4a6-1fe9-4815-afbe-22db20d07aae",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Home/loginValidation.js",
      "file": "cypress/integration/Autolearning/Home/loginValidation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8db89593-79c4-451b-9fd3-8418bb2c5783",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9f7fd563-7506-4f50-a67a-ad83d5206de1",
              "title": "Validate login using custom command",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Login successful validation using page objects",
                  "fullTitle": "Actions Validate login using custom command Login successful validation using page objects",
                  "timedOut": null,
                  "duration": 1690,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var myAccount = new _myAccountPage[\"default\"]();\nmyAccount.myAccount.loginEmail().type('antara.jb@gmail.com');\nmyAccount.loginPass().type('12345678');\nmyAccount.loginSubmit().click();\nmyAccount.loginSuccess().should('be.exist');",
                  "err": {
                    "message": "TypeError: Cannot read property 'loginEmail' of undefined",
                    "estack": "TypeError: Cannot read property 'loginEmail' of undefined\n    at Context.eval (https://www.flighthub.com/__cypress/tests?p=cypress/integration/Autolearning/Home/loginValidation.js:16:27)",
                    "diff": null
                  },
                  "uuid": "8f059902-309c-4c3d-94a3-92c521feece2",
                  "parentUUID": "9f7fd563-7506-4f50-a67a-ad83d5206de1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Login using custom command and passing raw argument data",
                  "fullTitle": "Actions Validate login using custom command Login using custom command and passing raw argument data",
                  "timedOut": null,
                  "duration": 5368,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.login('antara.jb@gmail.com', '12345678');",
                  "err": {},
                  "uuid": "769671d7-0b76-4b44-af4b-8e145e7bb4c7",
                  "parentUUID": "9f7fd563-7506-4f50-a67a-ad83d5206de1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Login using custom command and read test data from json",
                  "fullTitle": "Actions Validate login using custom command Login using custom command and read test data from json",
                  "timedOut": null,
                  "duration": 5296,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('FlightHub_user.json').then(function (user) {\n  var email = user.email;\n  var pass = user.password;\n  cy.login(email, pass);\n});",
                  "err": {},
                  "uuid": "efd5a272-c6b5-4388-afc7-68e2da4c2be2",
                  "parentUUID": "9f7fd563-7506-4f50-a67a-ad83d5206de1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "769671d7-0b76-4b44-af4b-8e145e7bb4c7",
                "efd5a272-c6b5-4388-afc7-68e2da4c2be2"
              ],
              "failures": [
                "8f059902-309c-4c3d-94a3-92c521feece2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 12354,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d31958e8-0f9c-42d0-bf4d-eeb6674b31bc",
      "title": "",
      "fullFile": "cypress/integration/Autolearning/Other/environmentVariable.js",
      "file": "cypress/integration/Autolearning/Other/environmentVariable.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "39c1746e-207e-4666-b302-942a32a26e44",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9341457c-aa32-416e-be61-b6f01d8356a1",
              "title": "Validate using environment variable ",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Requeust a URL using cypress.json",
                  "fullTitle": "Actions Validate using environment variable  Requeust a URL using cypress.json",
                  "timedOut": null,
                  "duration": 1003,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(Cypress.env('QA'));",
                  "err": {},
                  "uuid": "fcf1580b-c8fa-4eda-a82f-7fcf3d033d99",
                  "parentUUID": "9341457c-aa32-416e-be61-b6f01d8356a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Requeust a URL using cypress.json",
                  "fullTitle": "Actions Validate using environment variable  Requeust a URL using cypress.json",
                  "timedOut": null,
                  "duration": 3493,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(Cypress.env('Staging'));",
                  "err": {},
                  "uuid": "71c79849-d596-4d5d-b403-092de55e6b4a",
                  "parentUUID": "9341457c-aa32-416e-be61-b6f01d8356a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Requeust a URL using cypress.json",
                  "fullTitle": "Actions Validate using environment variable  Requeust a URL using cypress.json",
                  "timedOut": null,
                  "duration": 660,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(Cypress.env('Production'));",
                  "err": {},
                  "uuid": "1b64ebeb-8e7f-437b-9ca0-e3b557fc9fb9",
                  "parentUUID": "9341457c-aa32-416e-be61-b6f01d8356a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fcf1580b-c8fa-4eda-a82f-7fcf3d033d99",
                "71c79849-d596-4d5d-b403-092de55e6b4a",
                "1b64ebeb-8e7f-437b-9ca0-e3b557fc9fb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5156,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1399b61f-acbc-4f42-8320-28bd85f687aa",
      "title": "",
      "fullFile": "cypress/integration/examples/actions.spec.js",
      "file": "cypress/integration/examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 8318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "ae59cfe0-32d7-4787-8695-9817633cb2f5",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "5f24250f-3a66-4bc9-86e1-3d419a75b242",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "b932345e-d225-47f9-9dda-7168b42cebf6",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 800,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "1f3b3f19-3fdc-418c-a86b-3726b19cd4e7",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "1c69a9ed-da98-4068-ad24-e414b2ab4c58",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "76e4f48b-177e-4b50-b34a-766ea0c46633",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "6e04a939-7ce8-47d6-a8a0-2b2515eef45b",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "98df146b-0cbe-430c-82b7-3d7eb25dccad",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 962,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "dfa7058c-133e-44b2-b3fb-847901ebda21",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "83442c69-3a7a-472c-a29e-985de64c95b5",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "251eb662-96c1-4e54-a2a3-98bfad01c150",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "90a5de63-3756-49a4-bc42-8272b245e5bc",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "0b8e4b22-bf99-4735-ac5f-249915703113",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollTo\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "3d7d5c14-9c67-4dc7-8a8e-3d0b154ba0f1",
              "parentUUID": "0632cc6d-03d3-48b2-b932-4d67e69eb1ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae59cfe0-32d7-4787-8695-9817633cb2f5",
            "5f24250f-3a66-4bc9-86e1-3d419a75b242",
            "b932345e-d225-47f9-9dda-7168b42cebf6",
            "1f3b3f19-3fdc-418c-a86b-3726b19cd4e7",
            "1c69a9ed-da98-4068-ad24-e414b2ab4c58",
            "76e4f48b-177e-4b50-b34a-766ea0c46633",
            "6e04a939-7ce8-47d6-a8a0-2b2515eef45b",
            "98df146b-0cbe-430c-82b7-3d7eb25dccad",
            "dfa7058c-133e-44b2-b3fb-847901ebda21",
            "83442c69-3a7a-472c-a29e-985de64c95b5",
            "251eb662-96c1-4e54-a2a3-98bfad01c150",
            "90a5de63-3756-49a4-bc42-8272b245e5bc",
            "0b8e4b22-bf99-4735-ac5f-249915703113",
            "3d7d5c14-9c67-4dc7-8a8e-3d0b154ba0f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18867,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f3f5a90-5e34-4562-88b6-c1843ba2725a",
      "title": "",
      "fullFile": "cypress/integration/examples/aliasing.spec.js",
      "file": "cypress/integration/examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c6ea499-d4db-4ec4-b773-abdef27cb83b",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "59af404e-331b-4763-8f2b-6e3bda494e83",
              "parentUUID": "1c6ea499-d4db-4ec4-b773-abdef27cb83b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.server();\ncy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "ad2a64d0-7723-4b74-92a9-531cf53b17bf",
              "parentUUID": "1c6ea499-d4db-4ec4-b773-abdef27cb83b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59af404e-331b-4763-8f2b-6e3bda494e83",
            "ad2a64d0-7723-4b74-92a9-531cf53b17bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4447531b-07ea-40d9-9a1a-f0b4e5c0f88a",
      "title": "",
      "fullFile": "cypress/integration/examples/assertions.spec.js",
      "file": "cypress/integration/examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "366a2ff9-3858-4416-97d1-0d63e74d18fe",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "247ae0b3-4e9d-4b66-91fa-75e509dd0f60",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 435,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "3ab17183-2dd6-4f56-8343-371b0193654f",
                  "parentUUID": "247ae0b3-4e9d-4b66-91fa-75e509dd0f60",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "d49cc355-dc47-449c-b065-3ffb20ebed88",
                  "parentUUID": "247ae0b3-4e9d-4b66-91fa-75e509dd0f60",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ab17183-2dd6-4f56-8343-371b0193654f",
                "d49cc355-dc47-449c-b065-3ffb20ebed88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 585,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "50147e7f-e469-44f6-b81d-72df08ad95b2",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "9ea96215-1ae0-4770-a4ba-416f1c1db818",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "86928051-ebf9-4e78-be16-09b0fe26acc2",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "eedb2447-ed57-44ea-9a9a-6dd00d174aa2",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "68cf580a-1392-447a-a236-1e4818301c9d",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "7476fa63-3880-4b0f-8355-1914ec60c0cc",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 193,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "ba2f11fb-f4ec-4e16-993e-4a11b46d1577",
                  "parentUUID": "50147e7f-e469-44f6-b81d-72df08ad95b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ea96215-1ae0-4770-a4ba-416f1c1db818",
                "86928051-ebf9-4e78-be16-09b0fe26acc2",
                "eedb2447-ed57-44ea-9a9a-6dd00d174aa2",
                "68cf580a-1392-447a-a236-1e4818301c9d",
                "7476fa63-3880-4b0f-8355-1914ec60c0cc",
                "ba2f11fb-f4ec-4e16-993e-4a11b46d1577"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1044,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a0258620-f914-46fe-9403-abef0249819e",
      "title": "",
      "fullFile": "cypress/integration/examples/connectors.spec.js",
      "file": "cypress/integration/examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3d016de-a7b2-47de-b249-57dd68178ed6",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "8f01d375-2c61-4eae-8a75-752ffd922d91",
              "parentUUID": "c3d016de-a7b2-47de-b249-57dd68178ed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "2290bd76-f76c-4578-b8e5-9dd7e5536e2e",
              "parentUUID": "c3d016de-a7b2-47de-b249-57dd68178ed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "f3dde228-40d4-4558-8f66-acef6df673bf",
              "parentUUID": "c3d016de-a7b2-47de-b249-57dd68178ed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "8c60ce49-93d3-4645-8634-fdf2bccdd621",
              "parentUUID": "c3d016de-a7b2-47de-b249-57dd68178ed6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "55be1709-f098-45f6-9517-ff972d365f34",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "891a21d1-5bce-4511-8114-393168a2eb63",
                  "parentUUID": "55be1709-f098-45f6-9517-ff972d365f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 174,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "a705c19b-442e-4fbe-8d0d-b37a6236377c",
                  "parentUUID": "55be1709-f098-45f6-9517-ff972d365f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "629b44a6-9a49-4808-830e-25de4a60dd36",
                  "parentUUID": "55be1709-f098-45f6-9517-ff972d365f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "cf3101f6-3bb0-43ab-b782-923b6683cc52",
                  "parentUUID": "55be1709-f098-45f6-9517-ff972d365f34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "891a21d1-5bce-4511-8114-393168a2eb63",
                "a705c19b-442e-4fbe-8d0d-b37a6236377c",
                "629b44a6-9a49-4808-830e-25de4a60dd36",
                "cf3101f6-3bb0-43ab-b782-923b6683cc52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 667,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8f01d375-2c61-4eae-8a75-752ffd922d91",
            "2290bd76-f76c-4578-b8e5-9dd7e5536e2e",
            "f3dde228-40d4-4558-8f66-acef6df673bf",
            "8c60ce49-93d3-4645-8634-fdf2bccdd621"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 782,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2292b92a-dc70-4efe-aa62-15286fd05e12",
      "title": "",
      "fullFile": "cypress/integration/examples/cookies.spec.js",
      "file": "cypress/integration/examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "804e69f4-62a7-454f-9241-2ea0ecf5dfda",
              "parentUUID": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "e21d113f-56ea-41da-8795-0ead505fc6bb",
              "parentUUID": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "642a207c-a93a-4fc9-b86f-05e86088d481",
              "parentUUID": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "c09c5bab-147c-4856-88ec-7281f12fd040",
              "parentUUID": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "9f17d774-57c3-4b99-b541-a4d9d99bdcd9",
              "parentUUID": "3f0b9add-5ea6-4e8c-869b-d80aba9efde1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "804e69f4-62a7-454f-9241-2ea0ecf5dfda",
            "e21d113f-56ea-41da-8795-0ead505fc6bb",
            "642a207c-a93a-4fc9-b86f-05e86088d481",
            "c09c5bab-147c-4856-88ec-7281f12fd040",
            "9f17d774-57c3-4b99-b541-a4d9d99bdcd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "853a5cc6-f2fe-4d4a-9402-5d7b265fcea2",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b7c85cc-38a4-4a77-bab9-fc3e0169dabe",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "318fa707-01f2-4f85-b570-f310249023e9",
              "parentUUID": "7b7c85cc-38a4-4a77-bab9-fc3e0169dabe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "318fa707-01f2-4f85-b570-f310249023e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86c3af77-9a16-4ca0-9215-f0d7408a146b",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "58124039-6aa9-4759-bb16-db25325c467a",
              "parentUUID": "86c3af77-9a16-4ca0-9215-f0d7408a146b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "5cab4cbc-fabe-4d20-a70c-345f15ceff9f",
              "parentUUID": "86c3af77-9a16-4ca0-9215-f0d7408a146b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  whitelist: 'session_id'\n});",
              "err": {},
              "uuid": "c9e5f5fa-931f-44db-8ea9-f5277d80b985",
              "parentUUID": "86c3af77-9a16-4ca0-9215-f0d7408a146b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58124039-6aa9-4759-bb16-db25325c467a",
            "5cab4cbc-fabe-4d20-a70c-345f15ceff9f",
            "c9e5f5fa-931f-44db-8ea9-f5277d80b985"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 498,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf6de428-e914-4dd7-b040-14131ef64bad",
          "title": "Cypress.Server",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".defaults() - change default config of server",
              "fullTitle": "Cypress.Server .defaults() - change default config of server",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Server.defaults({\n  delay: 0,\n  force404: false\n});",
              "err": {},
              "uuid": "4137af91-b76c-470b-85e4-262d5018ef1f",
              "parentUUID": "cf6de428-e914-4dd7-b040-14131ef64bad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4137af91-b76c-470b-85e4-262d5018ef1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a851c0a3-2819-4441-a9a4-4495b95b46c1",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "73d7f7d5-3530-4073-bf9b-93a44afffce3",
              "parentUUID": "a851c0a3-2819-4441-a9a4-4495b95b46c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73d7f7d5-3530-4073-bf9b-93a44afffce3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c781b34-e687-4400-a7ca-b9675712b7e4",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "1b8844b8-9ce2-470d-b839-a5b1b1640d31",
              "parentUUID": "5c781b34-e687-4400-a7ca-b9675712b7e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b8844b8-9ce2-470d-b839-a5b1b1640d31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6ca9e6c-cf79-44bd-a7d3-0335bdd6320c",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "70e3ad04-a832-4e44-8378-00acc5c18fde",
              "parentUUID": "d6ca9e6c-cf79-44bd-a7d3-0335bdd6320c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70e3ad04-a832-4e44-8378-00acc5c18fde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1fde6e06-6de2-4b33-b34a-5e323f0e36c7",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "0cb1b7dd-426a-41d0-af3f-13c92399abdc",
              "parentUUID": "1fde6e06-6de2-4b33-b34a-5e323f0e36c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cb1b7dd-426a-41d0-af3f-13c92399abdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d49f935f-f3bc-4fa9-82b4-55dceb511859",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "833673f1-990b-4c9e-b62c-fd4c8bd657a1",
              "parentUUID": "d49f935f-f3bc-4fa9-82b4-55dceb511859",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "833673f1-990b-4c9e-b62c-fd4c8bd657a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d72a230-77ed-4a70-9e44-6b675cf20d08",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "9e6873da-7402-4861-b6c3-31363a7775c7",
              "parentUUID": "1d72a230-77ed-4a70-9e44-6b675cf20d08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e6873da-7402-4861-b6c3-31363a7775c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24a617bb-7fb0-45de-bf34-cd27063f87f0",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "7427c16f-dbe9-46c8-b799-9bf688d09193",
              "parentUUID": "24a617bb-7fb0-45de-bf34-cd27063f87f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7427c16f-dbe9-46c8-b799-9bf688d09193"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6a6df95a-96d3-4e9f-a694-85b62f891f73",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "8525ba96-fde2-48f8-a996-dd464908124e",
              "parentUUID": "6a6df95a-96d3-4e9f-a694-85b62f891f73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8525ba96-fde2-48f8-a996-dd464908124e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 135,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f895677-7969-4804-a617-b8597fc8d9e1",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "def87009-e9d9-404c-8d30-f6ae6f7f58a3",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\ncy.server();\ncy.fixture('example.json').as('comment'); // when application makes an Ajax request matching \"GET comments/*\"\n// Cypress will intercept it and reply with object\n// from the \"comment\" alias\ncy.route('GET', 'comments/*', '@comment').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // you can also just write the fixture in the route\ncy.route('GET', 'comments/*', 'fixture:example.json').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data'); // or write fx to represent fixture\n// by default it assumes it's .json\ncy.route('GET', 'comments/*', 'fx:example').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "fbbecd07-1f69-41fd-ba01-942bc0dad898",
              "parentUUID": "def87009-e9d9-404c-8d30-f6ae6f7f58a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "c0660275-8657-49c1-bee7-4a6f26b1e3b3",
              "parentUUID": "def87009-e9d9-404c-8d30-f6ae6f7f58a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "666628fa-fc68-4f61-8c2a-a626a687fb1e",
              "parentUUID": "def87009-e9d9-404c-8d30-f6ae6f7f58a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "3d4e61fd-4988-4ca8-ad94-f3945617eeee",
              "parentUUID": "def87009-e9d9-404c-8d30-f6ae6f7f58a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbbecd07-1f69-41fd-ba01-942bc0dad898",
            "c0660275-8657-49c1-bee7-4a6f26b1e3b3",
            "666628fa-fc68-4f61-8c2a-a626a687fb1e",
            "3d4e61fd-4988-4ca8-ad94-f3945617eeee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d6e8bb8-e4ca-44df-aceb-2e8258d2ca6e",
      "title": "",
      "fullFile": "cypress/integration/examples/local_storage.spec.js",
      "file": "cypress/integration/examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c87e6650-a4b1-4bc0-8c83-78cf3437e671",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "bfdd1067-0939-4bb5-9a1c-1efe33270563",
              "parentUUID": "c87e6650-a4b1-4bc0-8c83-78cf3437e671",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfdd1067-0939-4bb5-9a1c-1efe33270563"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 905,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75fd920c-bc96-4754-b2ac-61883edc2c89",
      "title": "",
      "fullFile": "cypress/integration/examples/location.spec.js",
      "file": "cypress/integration/examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6614f898-8acd-4159-b93f-415789249c34",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "fde05429-75fe-4d44-ab14-fdb8f1b8ad73",
              "parentUUID": "6614f898-8acd-4159-b93f-415789249c34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "a88b3b1a-c07a-42e4-9aa8-b7df62d16804",
              "parentUUID": "6614f898-8acd-4159-b93f-415789249c34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "d13ca4a2-fae6-46e0-a34e-75206bc336da",
              "parentUUID": "6614f898-8acd-4159-b93f-415789249c34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fde05429-75fe-4d44-ab14-fdb8f1b8ad73",
            "a88b3b1a-c07a-42e4-9aa8-b7df62d16804",
            "d13ca4a2-fae6-46e0-a34e-75206bc336da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 636,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2f3ff615-ca7b-40cb-97a2-bd9c166a00ce",
      "title": "",
      "fullFile": "cypress/integration/examples/misc.spec.js",
      "file": "cypress/integration/examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "666f3950-3476-4802-8049-fcfb2216967d",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "765898b5-0dda-4961-b14d-a70a37ee331d",
              "parentUUID": "666f3950-3476-4802-8049-fcfb2216967d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "b81d3bdd-3d1b-48da-9b39-5f94736222f0",
              "parentUUID": "666f3950-3476-4802-8049-fcfb2216967d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "a98f0fd1-d17a-493f-822b-dbfeacc97d92",
              "parentUUID": "666f3950-3476-4802-8049-fcfb2216967d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "ce18ee19-670b-4826-8f80-2a62f22b11b8",
              "parentUUID": "666f3950-3476-4802-8049-fcfb2216967d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6db4e9c8-55ec-4d1d-a0b7-c3575fde0ca2",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1774,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "f7283161-6eaf-45eb-b0ba-af2754dc56ab",
                  "parentUUID": "6db4e9c8-55ec-4d1d-a0b7-c3575fde0ca2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  beforeScreenshot: function beforeScreenshot() {},\n  afterScreenshot: function afterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "a3dedc60-6767-4453-ae71-a9c2a96744e9",
                  "parentUUID": "6db4e9c8-55ec-4d1d-a0b7-c3575fde0ca2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7283161-6eaf-45eb-b0ba-af2754dc56ab",
                "a3dedc60-6767-4453-ae71-a9c2a96744e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1913,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "765898b5-0dda-4961-b14d-a70a37ee331d",
            "b81d3bdd-3d1b-48da-9b39-5f94736222f0",
            "a98f0fd1-d17a-493f-822b-dbfeacc97d92",
            "ce18ee19-670b-4826-8f80-2a62f22b11b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1353,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb48168c-f397-4df4-8771-c9ca405af774",
      "title": "",
      "fullFile": "cypress/integration/examples/navigation.spec.js",
      "file": "cypress/integration/examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e647ff8e-1b60-4a46-86b5-ee1b3a6b8802",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "c03bf10c-0c1f-4c25-a901-0f88d775a713",
              "parentUUID": "e647ff8e-1b60-4a46-86b5-ee1b3a6b8802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "acfe1cba-a33e-4334-89bd-233a6968b54a",
              "parentUUID": "e647ff8e-1b60-4a46-86b5-ee1b3a6b8802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "45a97e58-a243-4778-9014-f7a911dad570",
              "parentUUID": "e647ff8e-1b60-4a46-86b5-ee1b3a6b8802",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c03bf10c-0c1f-4c25-a901-0f88d775a713",
            "acfe1cba-a33e-4334-89bd-233a6968b54a",
            "45a97e58-a243-4778-9014-f7a911dad570"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "deed4f5f-e1eb-4541-b38b-be81836a8d7f",
      "title": "",
      "fullFile": "cypress/integration/examples/network_requests.spec.js",
      "file": "cypress/integration/examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.server() - control behavior of network requests and responses",
              "fullTitle": "Network Requests cy.server() - control behavior of network requests and responses",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/server\ncy.server().should(function (server) {\n  // the default options on server\n  // you can override any of these options\n  expect(server.delay).to.eq(0);\n  expect(server.method).to.eq('GET');\n  expect(server.status).to.eq(200);\n  expect(server.headers).to.be[\"null\"];\n  expect(server.response).to.be[\"null\"];\n  expect(server.onRequest).to.be.undefined;\n  expect(server.onResponse).to.be.undefined;\n  expect(server.onAbort).to.be.undefined; // These options control the server behavior\n  // affecting all requests\n  // pass false to disable existing route stubs\n  expect(server.enable).to.be[\"true\"]; // forces requests that don't match your routes to 404\n  expect(server.force404).to.be[\"false\"]; // whitelists requests from ever being logged or stubbed\n  expect(server.whitelist).to.be.a('function');\n});\ncy.server({\n  method: 'POST',\n  delay: 1000,\n  status: 422,\n  response: {}\n}); // any route commands will now inherit the above options\n// from the server. anything we pass specifically\n// to route will override the defaults though.",
              "err": {},
              "uuid": "b0cf30fd-98cc-4376-b6fa-379d5209122d",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length(500);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "fd8f68a4-1655-458f-a081-dd87ac32e42f",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.length(500);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "ec4d6663-8ca8-40f8-ad47-233f8e146441",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "6082e81a-de7e-4cc1-a0b2-7287740e720e",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    id: 101,\n    // there are already 100 posts, so new entity gets id 101\n    title: 'Cypress Test Runner'\n  }); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "988bc281-530c-49e9-b993-b51758504637",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "8c0f86bf-1400-4d7e-b7b7-6edf262ecf68",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.route() - route responses to matching requests",
              "fullTitle": "Network Requests cy.route() - route responses to matching requests",
              "timedOut": null,
              "duration": 1126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/route\nvar message = 'whoa, this comment does not exist';\ncy.server(); // Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200); // Listen to POST to comments\ncy.route('POST', '/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (xhr) {\n  expect(xhr.requestBody).to.include('email');\n  expect(xhr.requestHeaders).to.have.property('Content-Type');\n  expect(xhr.responseBody).to.have.property('name', 'Using POST in cy.route()');\n}); // Stub a response to PUT comments/ ****\ncy.route({\n  method: 'PUT',\n  url: 'comments/*',\n  status: 404,\n  response: {\n    error: message\n  },\n  delay: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "e6d9e9d8-5fab-4aa3-bde0-ec9d2515f97a",
              "parentUUID": "14a3e6e9-8419-485b-a264-8f0dd0d97467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0cf30fd-98cc-4376-b6fa-379d5209122d",
            "fd8f68a4-1655-458f-a081-dd87ac32e42f",
            "ec4d6663-8ca8-40f8-ad47-233f8e146441",
            "6082e81a-de7e-4cc1-a0b2-7287740e720e",
            "988bc281-530c-49e9-b993-b51758504637",
            "8c0f86bf-1400-4d7e-b7b7-6edf262ecf68",
            "e6d9e9d8-5fab-4aa3-bde0-ec9d2515f97a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ee261ff7-780d-482b-88c4-5865a1bdde44",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd61c189-efd3-4343-b2b3-c831036b4f23",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "9c415d2d-3770-466e-88b9-0c44d41a2005",
              "parentUUID": "cd61c189-efd3-4343-b2b3-c831036b4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "cd505708-a4c5-4b2a-9a51-1c359a9c9bc8",
              "parentUUID": "cd61c189-efd3-4343-b2b3-c831036b4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "072a73a1-cffb-45c3-a63d-427c76175dd5",
              "parentUUID": "cd61c189-efd3-4343-b2b3-c831036b4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "96c2431c-8e48-4366-8722-0f1c2160c47e",
              "parentUUID": "cd61c189-efd3-4343-b2b3-c831036b4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "4a4a0771-193b-480b-900e-490730effbc2",
              "parentUUID": "cd61c189-efd3-4343-b2b3-c831036b4f23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c415d2d-3770-466e-88b9-0c44d41a2005",
            "cd505708-a4c5-4b2a-9a51-1c359a9c9bc8",
            "072a73a1-cffb-45c3-a63d-427c76175dd5",
            "96c2431c-8e48-4366-8722-0f1c2160c47e",
            "4a4a0771-193b-480b-900e-490730effbc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b46b899-f5f0-4d74-93c7-d5f629458aa8",
      "title": "",
      "fullFile": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5acc988-4077-4bf9-be88-967ae3f100e7",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "80e7bf0c-4674-43aa-b797-aaee2b25c791",
              "parentUUID": "f5acc988-4077-4bf9-be88-967ae3f100e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n  obj.foo('first');\n}, 500);\nsetTimeout(function () {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "1f805c84-7511-4d2c-9923-0fbe7babf0bc",
              "parentUUID": "f5acc988-4077-4bf9-be88-967ae3f100e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "549943cb-ac09-46e0-a207-e33bb9ee523b",
              "parentUUID": "f5acc988-4077-4bf9-be88-967ae3f100e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "b1a8d25f-58ed-4e77-91e8-9a7bc41fd47f",
              "parentUUID": "f5acc988-4077-4bf9-be88-967ae3f100e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "f2b03f0b-5ea4-4743-9594-6d44c2562d85",
              "parentUUID": "f5acc988-4077-4bf9-be88-967ae3f100e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80e7bf0c-4674-43aa-b797-aaee2b25c791",
            "1f805c84-7511-4d2c-9923-0fbe7babf0bc",
            "549943cb-ac09-46e0-a207-e33bb9ee523b",
            "b1a8d25f-58ed-4e77-91e8-9a7bc41fd47f",
            "f2b03f0b-5ea4-4743-9594-6d44c2562d85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ed3e4ed8-7e2f-4665-a29c-581858a1a1b4",
      "title": "",
      "fullFile": "cypress/integration/examples/traversal.spec.js",
      "file": "cypress/integration/examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "7577ca04-21fc-4df0-923a-77bb35b4fa4d",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "369fa5f4-4823-4c09-b2e6-fc8ffe602785",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "8bdd52c0-5fdb-4bd5-8903-ec6946a4d3dd",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "421d19b3-817a-4748-a329-5d687c0bbaa8",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "ddcef198-7ff6-4f7b-987c-9df2f4b134b7",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "88623d46-be98-4a3d-b0f1-4f54aeed5f9b",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "29c192d9-bf23-4063-ac49-9af2c1196894",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "957ab265-8b45-4d3d-afbe-abb32bfbaabb",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "d2f1450c-aa4b-4308-87ed-cf74c8ade117",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "3dd9e45d-873f-42a5-b394-70271bc7e1c4",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "477200da-a97e-4a4c-a36a-97722e9fc79f",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "e44dc1c2-6cd5-47cb-bfaa-4140d14bbe8e",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "e8eedf71-2f90-44e0-998f-da1ecdeac369",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "404def6f-c9ed-40f1-8c9f-b4ef070c5c72",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "ffb83ba5-5df6-4e09-946f-c39f38c4a53a",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevAll\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "4f9f8a8c-d0cc-4d35-8d27-e0cd427df895",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevUntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "0f7df73a-25c9-4013-bf32-eb691e8cf74e",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "93503e8f-6ed6-4cd9-818c-6d2dd35bcfa8",
              "parentUUID": "7233ce13-75c9-44f0-b2d4-72a0532c7c06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7577ca04-21fc-4df0-923a-77bb35b4fa4d",
            "369fa5f4-4823-4c09-b2e6-fc8ffe602785",
            "8bdd52c0-5fdb-4bd5-8903-ec6946a4d3dd",
            "421d19b3-817a-4748-a329-5d687c0bbaa8",
            "ddcef198-7ff6-4f7b-987c-9df2f4b134b7",
            "88623d46-be98-4a3d-b0f1-4f54aeed5f9b",
            "29c192d9-bf23-4063-ac49-9af2c1196894",
            "957ab265-8b45-4d3d-afbe-abb32bfbaabb",
            "d2f1450c-aa4b-4308-87ed-cf74c8ade117",
            "3dd9e45d-873f-42a5-b394-70271bc7e1c4",
            "477200da-a97e-4a4c-a36a-97722e9fc79f",
            "e44dc1c2-6cd5-47cb-bfaa-4140d14bbe8e",
            "e8eedf71-2f90-44e0-998f-da1ecdeac369",
            "404def6f-c9ed-40f1-8c9f-b4ef070c5c72",
            "ffb83ba5-5df6-4e09-946f-c39f38c4a53a",
            "4f9f8a8c-d0cc-4d35-8d27-e0cd427df895",
            "0f7df73a-25c9-4013-bf32-eb691e8cf74e",
            "93503e8f-6ed6-4cd9-818c-6d2dd35bcfa8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a05c8517-4275-4db8-be15-249ef14f5418",
      "title": "",
      "fullFile": "cypress/integration/examples/utilities.spec.js",
      "file": "cypress/integration/examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  var ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "6e7af0f0-6bdf-4c40-8ad1-c9a014e423de",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "e3b40654-3867-4b99-9d3f-e769295a063c",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  return (// https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n    // get the dataUrl string for the javascript-logo\n    Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n      // create an <img> element and set its src to the dataUrl\n      var img = Cypress.$('<img />', {\n        src: dataUrl\n      }); // need to explicitly return cy here since we are initially returning\n      // the Cypress.Blob.imgSrcToDataURL promise to our test\n      // append the image\n      $div.append(img);\n      cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n    })\n  );\n});",
              "err": {},
              "uuid": "f92c7680-b40d-4361-9c1a-04053a27d2e3",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "7dcbe6df-8959-46f4-a1f0-9d482fe30e92",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge').should(function ($el) {\n  // parse American time like \"3:38 PM\"\n  var m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n  var f = 'h:mm A';\n  expect(m.isBetween(start, end), \"\".concat(m.format(f), \" should be between \").concat(start.format(f), \" and \").concat(end.format(f))).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "ba9dabab-c337-4e03-b973-46820a80fe7f",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(function () {\n  return (// return a promise to cy.then() that\n    // is awaited until it resolves\n    // @ts-ignore TS7006\n    waitOneSecond().then(function (str) {\n      expect(str).to.eq('foo');\n      expect(waited).to.be[\"true\"];\n    })\n  );\n});",
              "err": {},
              "uuid": "11952205-4dde-4c65-a3df-8e8d51f1a00f",
              "parentUUID": "6f77eeeb-542e-419c-9e0d-c81fbc7862f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e7af0f0-6bdf-4c40-8ad1-c9a014e423de",
            "e3b40654-3867-4b99-9d3f-e769295a063c",
            "f92c7680-b40d-4361-9c1a-04053a27d2e3",
            "7dcbe6df-8959-46f4-a1f0-9d482fe30e92",
            "ba9dabab-c337-4e03-b973-46820a80fe7f",
            "11952205-4dde-4c65-a3df-8e8d51f1a00f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "621ae44a-46d3-4621-aa54-39a597c678a1",
      "title": "",
      "fullFile": "cypress/integration/examples/viewport.spec.js",
      "file": "cypress/integration/examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92526f74-ef57-4415-af20-75f9f2b5465f",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "8f6a0e01-5351-4256-a3c3-d904511826ef",
              "parentUUID": "92526f74-ef57-4415-af20-75f9f2b5465f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f6a0e01-5351-4256-a3c3-d904511826ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aef60ef1-5b63-4621-9b6b-1b8e120129e0",
      "title": "",
      "fullFile": "cypress/integration/examples/waiting.spec.js",
      "file": "cypress/integration/examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d863a61-19fd-4368-8a39-0f37dd6a4d01",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "1bf4f39d-364c-4288-82f4-d8ca7ebb6a7e",
              "parentUUID": "8d863a61-19fd-4368-8a39-0f37dd6a4d01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.server(); // Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "3b89670b-f070-48eb-acba-4c0f53caffdc",
              "parentUUID": "8d863a61-19fd-4368-8a39-0f37dd6a4d01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bf4f39d-364c-4288-82f4-d8ca7ebb6a7e",
            "3b89670b-f070-48eb-acba-4c0f53caffdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "80eb1697-47c0-4640-83d0-96543a85f9b3",
      "title": "",
      "fullFile": "cypress/integration/examples/window.spec.js",
      "file": "cypress/integration/examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a48b6f80-4dd5-4d54-9810-8bacf3ed490b",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "8459f753-fd83-4ca5-b50d-89fb385a1d5b",
              "parentUUID": "a48b6f80-4dd5-4d54-9810-8bacf3ed490b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "4d90d72d-1e2c-491b-922a-e79d603eb9cd",
              "parentUUID": "a48b6f80-4dd5-4d54-9810-8bacf3ed490b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "21b61e72-69cc-4b40-8319-ec68e2f299ee",
              "parentUUID": "a48b6f80-4dd5-4d54-9810-8bacf3ed490b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8459f753-fd83-4ca5-b50d-89fb385a1d5b",
            "4d90d72d-1e2c-491b-922a-e79d603eb9cd",
            "21b61e72-69cc-4b40-8319-ec68e2f299ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}